{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","submitUpdate","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7517f69a.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Update Task\"\r\n            value={input}\r\n            name=\"text\"\r\n            className=\"todo-input edit\"\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          />\r\n          <button className=\"todo-button edit\">Update</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add a todo\"\r\n            value={input}\r\n            name=\"text\"\r\n            className=\"todo-input\"\r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n          />\r\n          <button className=\"todo-button\">Add Todo</button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: \"\",\r\n  });\r\n\r\n  const submitUpdate = (value) => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) =>\r\n    edit.id ? (\r\n      <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    ) : (\r\n      <div\r\n        className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n        key={index}\r\n      >\r\n        <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n          {todo.text}\r\n        </div>\r\n        <div className=\"icons\">\r\n          <RiCloseCircleLine\r\n            onClick={() => removeTodo(todo.id)}\r\n            className=\"delete-icon\"\r\n          />\r\n          <TiEdit\r\n            onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n            className=\"edit-icon\"\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n    setTodos(removeArr);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n        return;\r\n      }\r\n\r\n      setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n  }\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Whats happening today?</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useEffect, Suspense, lazy } from 'react';\nimport './Theme2.css';\nimport TodoList from './components/TodoList';\nimport { TYPE_OF_THEME } from './enum';\n\nconst CustomTheme = React.lazy(() => import('./themes/customTheme'));\nconst DefaultTheme = React.lazy(() => import('./themes/defaultTheme'));\n\nconst ThemeSelector = ({ children }) => {\n  const CHOSEN_THEME = localStorage.getItem('TYPE_OF_THEME') || TYPE_OF_THEME.CUSTOM_MODE;\n  console.log(\"THEME\", CHOSEN_THEME)\n  return (\n    <>\n      <React.Suspense fallback={<></>}>\n        {(CHOSEN_THEME === TYPE_OF_THEME.DEFAULT_MODE) && <DefaultTheme />}\n        {(CHOSEN_THEME === TYPE_OF_THEME.CUSTOM_MODE) && <DefaultTheme />}\n      </React.Suspense>\n      {children}\n    </>\n  )\n}\n\nfunction App() {\n\n  const changeTheme = () => {\n    localStorage.setItem('TYPE_OF_THEME', 2);\n  }\n\n  return (\n    <div className=\"bg\">\n    <div className=\"pattern\">\n      <div className=\"todo-app\">\n        {/* <button onClick={changeTheme}>Change Theme</button> */}\n        <TodoList />\n      </div>\n    </div>\n  </div>\n    \n  );\n}\n\nexport default App;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}